var AppDispatcher = require('../dispatcher/AppDispatcher');
var EventEmitter = require('events').EventEmitter;
var ProductConstants = require('../constants/ProductConstants');
var _ = require('underscore');

var _products = [];

function loadProductData(products) {
    _products = products.map(product => {
        product.selected = false;
        return product;
    });
}

function setSelected(product, selected) {
    _products.map(prod => {
        if (prod.id === product.id) {
            prod.selected = selected;
        }

        return prod;
    });
}

var ProductStore = _.extend({}, EventEmitter.prototype, {

    getProducts: function () {
        return _products;
    },

    emitChange: function () {
        this.emit('change');
    },

    addChangeListener: function (callback) {
        this.on('change', callback);
    },

    removeChangeListener: function (callback) {
        this.removeListener('change', callback);
    }
});

AppDispatcher.register(function (payload) {
    var action = payload.action;

    switch (action.actionType) {
        case ProductConstants.RECEIVE_PRODUCTS:
            loadProductData(action.products);
            break;
        case ProductConstants.ADD_PRODUCT:
            setSelected(action.product, true);
            break;
        case ProductConstants.REMOVE_PRODUCT:
            setSelected(action.product, false);
            break;
        default:
            return true;
    }

    ProductStore.emitChange();
    return true;
});

module.exports = ProductStore;